module clmm_pool::recovery_btc_tests {
    #[allow(unused_const)]
    const COPYRIGHT_NOTICE: vector<u8> = b"Â© 2025 Metabyte Labs, Inc.  All Rights Reserved.";
    #[allow(unused_const)]
    const PATENT_NOTICE: vector<u8> = b"Patent pending - U.S. Patent Application No. 63/861,982";

    use sui::test_scenario;
    use integer_mate::i32;
    use clmm_pool::tick;
    use sui::test_utils;

    #[test_only]
    public struct TestCoinA has drop, store {}
    #[test_only]
    public struct TestCoinB has drop, store {}

    /*
    state before the bug fix:
    sqrt price: 2062269596072228240
    tick index: -43824
    liquidity: 13062581757983628
    staked liquidity: 43409834894446722
    */
    #[test_only]
    fun current_tick_index(): i32::I32 {
        i32::neg_from(70498)
    }

    fun current_liqudity(): u128 {
        363486485596   
    }

    fun current_staked_liquidity(): u128 {
        363201586203
    }

    #[test_only] 
    fun setup_tick_manager(ctx: &mut sui::tx_context::TxContext): tick::TickManager {
        tick::new_test(

40,
12345u64, // You can change this seed value

vector<u32>[
  4294890656, 4294892776, 4294894256, 4294895056, 4294895376, 4294895496, 4294895536, 4294895616, 4294895656, 4294895696, 4294895856, 4294895896, 4294895936, 4294895976, 4294896056, 4294896096, 4294896136, 4294896336, 4294896376, 4294896416, 4294896456, 4294896496, 4294896536, 4294896576, 4294896616, 4294896696, 4294896816, 4294896856, 4294896896, 4294896976, 4294897056, 4294897176, 4294897216, 4294897376, 4294897416, 4294897456, 4294897496, 4294897536, 4294897576, 4294897616, 4294897656, 4294897696, 4294897776, 4294897816, 4294897856, 4294897896, 4294897936, 4294897976, 4294898056, 4294898096, 4294898136, 4294898336, 4294898376, 4294898416, 4294898496, 4294898536, 4294899056, 4294899696, 4294901256, 4294901736
],

vector<u128>[
  399748159730876262, 444446393666913357, 478581130743366301, 498111401045483341, 506144878241062905, 509190723619840947, 510210073110179713, 512254898086732383, 513280381751431063, 514307918333047652, 518438676146935634, 519476539123985539, 520516479800112867, 521558502334665771, 523648809658090605, 524697102807358568, 525747494535877614, 531031079202139654, 532094150925227215, 533159350812809641, 534226683125261863, 535296152131487659, 536367762108936732, 537441517343621815, 538517422130135814, 540675697580026160, 543929340253670650, 545018233020267539, 546109305642535744, 548298007918244327, 550495482096577891, 553808217624020044, 554916886926491344, 559373803075399696, 560493614129733577, 561615666935094257, 562739965979245672, 563866515758935820, 564995320779914743, 566126385556952548, 567259714613857466, 568395312483493948, 570673332837809289, 571815764433661478, 572960483064628330, 574107493309128049, 575256799754744379, 576408406998244954, 578718542311999173, 579877079621873181, 581037936208909120, 586877171130951028, 588052041209162487, 589229263261123439, 591590782129395336, 592775088390840382, 608388555597570361, 628170828674657720, 679127067971565875, 695622445648931010
],

vector<u128>[
  58317, 82445, 724515, 1022536, 1484697, 1602757, 3995093969, 340282366920938463463374607431767198346, 117664256, 20670947744, 81402947, 933914, 324222875, 1601494313, 2041180, 82478369, 31889434, 5088060, 941914867, 2676694732, 934205925, 2702184, 52877951777, 118384403003, 126409905, 160624983985, 340282366920938463463374607345578971124, 340282366920938463463374607358170865771, 340282366920938463463374607430771343986, 340282366920938463463374607314380666497, 340282366920938463463374607431742213515, 340282366920938463463374607378842561805, 340282366920938463463374607431641801551, 340282366920938463463374607429090154506, 340282366920938463463374607431265556692, 220142, 340282366920938463463374607431766964621, 340282366920938463463374607430825481011, 340282366920938463463374607427776418714, 340282366920938463463374607431768211453, 340282366920938463463374607431651464726, 340282366920938463463374607411097161555, 340282366920938463463374607431458198046, 340282366920938463463374607431724044945, 340282366920938463463374607430874688764, 340282366920938463463374607431767277542, 340282366920938463463374607431446349869, 340282366920938463463374607430137897896, 340282366920938463463374607431766170276, 340282366920938463463374607431767444092, 340282366920938463463374607431727904833, 340282366920938463463374607431685733087, 340282366920938463463374607431767526714, 340282366920938463463374607431768088977, 340282366920938463463374607431766615766, 340282366920938463463374607431766874717, 340282366920938463463374607431767486941, 340282366920938463463374607431765850168, 340282366920938463463374607431768129011, 340282366920938463463374607431768153139
],

vector<u128>[
  58317, 82445, 724515, 1022536, 1484697, 1602757, 3995093969, 1031962, 117664256, 20670947744, 81402947, 933914, 324222875, 1601494313, 2041180, 82478369, 31889434, 5088060, 941914867, 2676694732, 944382045, 2702184, 52877951777, 118384403003, 126409905, 160625520279, 86241236214, 73597345685, 996867470, 117387544959, 25997941, 52925649651, 126409905, 2678056950, 502654764, 220142, 1246835, 942730445, 3991792742, 3, 116746730, 20671049901, 310013410, 44166511, 893522692, 933914, 321861587, 1630313560, 2041180, 767364, 40306623, 82478369, 684742, 122479, 1595690, 1336739, 724515, 2361288, 82445, 58317
],

vector<u128>[
  1149461271265487354, 1152122314492154626, 1198300645357610046, 1198312451506467178, 1226202071176040032, 931699101395498451, 819575746649596315, 1198312451506467178, 1137227511211280810, 1321172141835610088, 1736262101597188181, 1113253694367099660, 655797062603064112, 1393473698167906261, 1736222072900071194, 1609511200597911742, 1715340394882871184, 1222887850994228789, 631738507239873735, 639878293575368706, 581225767106106700, 639263242370298182, 731943984200311586, 1736262101597188181, 1736262101597188181, 1204825583580226015, 195168047873862999, 63406760840475924, 249711439192519470, 312911309033318764, 214917365507872893, 0, 0, 36969118774641500, 11734833833862824, 56223064420201964, 481256273403140, 0, 0, 0, 2856425145098702, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
],

vector<u128>[
  977169541052080, 980533659574629, 1006354426555239, 1007050041005243, 1031325540887039, 784635723644735, 691997893110347, 1007050041005243, 967618129652350, 1123135624762428, 1509965600051158, 956569067412444, 554587479858576, 1198189867676401, 1509341044206296, 1396508623723602, 1494534032565232, 1027000532836199, 565070721000911, 571341712056507, 517149816857137, 565877382859282, 647207846543515, 1509965600051158, 1509965600051158, 1024417121194249, 178968764330505, 42192627932334, 220418206961249, 288356147682995, 190472668619225, 0, 0, 34153550755838, 10873388079540, 48333567829655, 448337384780, 0, 0, 0, 2695633627988, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
],

vector<u128>[
  92648856279822866466408398, 92649236193758805849616990, 92652741529564422841155778, 92652775855376214315762403, 92654510254953194389994946, 92600521389066174089667511, 92597542433534635266938035, 92652775855376214315762403, 92647813450818206991343871, 92660404550233848730815810, 92660827089927370816507767, 92645031699697479641587105, 92592490763702927624459056, 92660580830346586845631871, 92660783434053630846217506, 92660697016214796951242012, 92660765459415616947689073, 92653953220795054347085168, 92591820073573150991380221, 92591573735178654466057089, 92586317590291557621361852, 92588958614445821344688103, 92594145624028188444747358, 92660844257753933951932122, 92660835299279262356572336, 92618976156174314913930834, 161523901353409544820, 98794447300638464605, 176286983951711930263, 229996879749599401324, 152729982222358358007, 0, 0, 22311221071789023460, 5602042832065226477, 3093483180518433905150, 613740430911124, 0, 0, 0, 176450422564807576743, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
],

vector<vector<u128>>[
  vector<u128>[4100087459314371086178],
  vector<u128>[4124746687934140311093],
  vector<u128>[4352268947169095039542],
  vector<u128>[4354496946619634270948],
  vector<u128>[4467072326569915015026],
  vector<u128>[1518288638394266106741],
  vector<u128>[5125672294651565574],
  vector<u128>[4354496946619634270948],
  vector<u128>[4047431287986007888209],
  vector<u128>[4904905502157946557276, 28379841531615822351],
  vector<u128>[5291364449179313420947, 491603885955462549113],
  vector<u128>[3991106347138740816307],
  vector<u128>[],
  vector<u128>[5123506832438346874977, 246981171812016140052],
  vector<u128>[5291364449179313420947, 490745946934102333638],
  vector<u128>[5267586450246309658669, 391060789623970856952],
  vector<u128>[5291364449179313420947, 471229000666463591650],
  vector<u128>[4430916683527677044713],
  vector<u128>[122274137174417781283],
  vector<u128>[217485258157654786563],
  vector<u128>[491384391180346474861],
  vector<u128>[1054007809031414695893],
  vector<u128>[1799005105505189734000],
  vector<u128>[5291364449179313420947, 491603885955462549113],
  vector<u128>[5291364449179313420947, 491603885955462549113],
  vector<u128>[3946031185158783232124, 48681687194006849180],
  vector<u128>[41599539030170964198, 118364636428658894081],
  vector<u128>[0, 42906222827907630207],
  vector<u128>[64303034612516246255, 141068132011004176138],
  vector<u128>[138097914667097662892, 214863012065585592775],
  vector<u128>[52950216701633112213, 129037531807469517151],
  vector<u128>[0, 0],
  vector<u128>[0, 0],
  vector<u128>[11167973880610238, 26185784459384159073],
  vector<u128>[0, 6252279946501368845],
  vector<u128>[0, 4714311888295984421],
  vector<u128>[0, 684978159499022],
  vector<u128>[0],
  vector<u128>[0],
  vector<u128>[0],
  vector<u128>[],
  vector<u128>[0, 0],
  vector<u128>[0, 0],
  vector<u128>[0, 0],
  vector<u128>[0, 0],
  vector<u128>[0],
  vector<u128>[0, 0],
  vector<u128>[0, 0],
  vector<u128>[0, 0],
  vector<u128>[0],
  vector<u128>[0, 0],
  vector<u128>[0, 0],
  vector<u128>[],
  vector<u128>[],
  vector<u128>[],
  vector<u128>[],
  vector<u128>[0],
  vector<u128>[0, 0],
  vector<u128>[0],
  vector<u128>[0]
],

vector<u128>[
  0, 0, 0, 0, 0, 1602757, 3995093966, 0, 0, 20670947744, 81402947, 0, 195632433, 1601494313, 2041180, 82478369, 0, 0, 941230125, 2676572253, 939073299, 0, 52877951777, 118384403003, 126409905, 160625252132, 340282366920938463463374607345552973183, 340282366920938463463374607358170865771, 340282366920938463463374607430771343986, 340282366920938463463374607314380675923, 0, 340282366920938463463374607378842561805, 340282366920938463463374607431641801551, 340282366920938463463374607429091639203, 340282366920938463463374607431265556692, 0, 340282366920938463463374607431766964621, 340282366920938463463374607430825481011, 340282366920938463463374607427776418714, 0, 0, 340282366920938463463374607411097263712, 340282366920938463463374607431458198046, 340282366920938463463374607431724044945, 340282366920938463463374607430874688764, 0, 340282366920938463463374607431572579023, 340282366920938463463374607430137897896, 340282366920938463463374607431766170276, 0, 340282366920938463463374607431759794267, 340282366920938463463374607431685733087, 0, 0, 0, 340282366920938463463374607431768201897, 0, 0, 0, 0
],

vector<u128>[
  0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 843744794435045017639u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 858427616817365716047u128, 851737690603583582514u128, 0u128, 858420121914278870288u128, 858355639065112418676u128, 856194416455815884047u128, 851349333008026349617u128, 843636227440363021906u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128, 0u128
],
            ctx
        )
    }

    #[test]
    fun test_recovery_btc() {
        let mut scenario = test_scenario::begin(@0x1);
        let tick_manager = setup_tick_manager(scenario.ctx());

        let (calculated_liquidity, calculated_staked_liquidity) = tick_manager.calc_current_liquidity(current_tick_index());

        assert!(calculated_liquidity == current_liqudity(), 1);
        assert!(calculated_staked_liquidity <= current_liqudity(), 2);
        assert!(calculated_staked_liquidity == current_staked_liquidity(), 3);

        test_utils::destroy(tick_manager);
        scenario.end();
    }

}